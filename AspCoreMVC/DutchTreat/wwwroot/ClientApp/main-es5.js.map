{"version":3,"sources":["webpack:///ClientApp/app/shop/productList.component.html","webpack:///ClientApp/app/shop/productList.component.ts","webpack:///ClientApp/app/checkout/checkout.component.html","webpack:///ClientApp/app/checkout/checkout.component.ts","webpack:///ClientApp/environments/environment.ts","webpack:///ClientApp/app/app.component.ts","webpack:///ClientApp/app/app.component.html","webpack:///ClientApp/app/app.module.ts","webpack:///ClientApp/app/shared/order.ts","webpack:///ClientApp/main.ts","webpack:///ClientApp/app/shop/shop.component.ts","webpack:///ClientApp/app/shop/shop.component.html","webpack:///ClientApp/app/login/login.component.html","webpack:///ClientApp/app/login/login.component.ts","webpack:///ClientApp/app/shared/dataService.ts","webpack:///ClientApp/app/shop/cart.component.html","webpack:///ClientApp/app/shop/cart.component.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ProductList","dataService","products","loadProducts","subscribe","success","product","addToOrder","Checkout","data","router","errorMessage","checkout","navigate","err","onCheckout","environment","production","AppComponent","title","routes","path","component","AppModule","forRoot","useHash","enableTracing","Order","orderDate","Date","items","Array","i","unitPrice","quantity","OrderItem","bootstrapModule","console","error","Shop","Login","creds","username","password","login","order","length","onLogin","DataService","http","token","get","pipe","tokenExpiration","post","response","expiration","log","orderNumber","getFullYear","toString","getTime","headers","set","newProduct","item","find","productId","id","productArtist","artist","productArtId","artId","productCategory","category","productSize","size","productTitle","price","push","Cart","loginRequired","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["\r\n<div class=\"row\">\r\n    <div class=\"product-info col-md-4 well well-sm\" *ngFor=\"let p of products\">\r\n        <div class=\"card bg-light rounded p-1 m-1\">\r\n            <img src=\"/img/{{p.artId}}.jpg\" class=\"img-responsive\"  [alt]=\"p.title\" />\r\n            <div class=\"product-name\">{{p.category}} - {{p.size}}</div>\r\n        \r\n                <div><strong>Price:</strong> {{p.price | currency:\"USD\":true}}</div>\r\n                <div><strong>Artist: </strong>{{p.artist}}</div>\r\n                <div><strong>Title: </strong>{{p.title}}</div>\r\n                <div><strong>Description: </strong>{{p.artDescription}}</div>\r\n   \r\n            <button id=\"buyButton\" class=\"btn btn-success btn-sm pull-right\" (click)=\"addProduct(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { DataService } from '../shared/dataService';\r\nimport { Product } from '../shared/product';\r\n\r\n@Component({\r\n  selector: 'product-list',\r\n    templateUrl: \"./productList.component.html\",\r\n    styleUrls: [\"./productList.component.css\"]\r\n})\r\nexport class ProductList implements OnInit {\r\n\r\n    public products: Product[] = [];\r\n\r\n    constructor(private dataService: DataService) {\r\n        \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dataService.loadProducts().subscribe(\r\n\r\n            success => {\r\n                if (success) {\r\n                    this.products = this.dataService.products;\r\n                }\r\n            }\r\n\r\n        );\r\n\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.dataService.addToOrder(product);\r\n    }\r\n}\r\n","<div class=\"row\">\r\n  <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\r\n  <h3>Confirm Order</h3>\r\n  <table class=\"table table-bordered table-hover\">\r\n    <tr *ngFor=\"let o of data.order.items\">\r\n      <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\r\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\r\n      <td>{{ o.quantity }}</td>\r\n      <td>{{ o.unitPrice|currency:'USD':\"symbol\" }}</td>\r\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':\"symbol\" }}</td>\r\n    </tr>\r\n  </table>\r\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\r\n    <table class=\"table table-condensed\">\r\n      <tr>\r\n        <td class=\"text-right\">Subtotal</td>\r\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':\"symbol\" }}</td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"text-right\">Shipping</td>\r\n        <td class=\"text-right\">$ 0.00</td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"text-right\">Total:</td>\r\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':\"symbol\" }}</td>\r\n      </tr>\r\n    </table>\r\n    <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\r\n    <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\r\n  </div>\r\n\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"checkout\",\r\n  templateUrl: \"checkout.component.html\",\r\n  styleUrls: ['checkout.component.css']\r\n})\r\nexport class Checkout {\r\n\r\n  constructor(public data: DataService, public router: Router) {\r\n  }\r\n  \r\n  errorMessage: string = \"\";\r\n\r\n    onCheckout() {\r\n     \r\n    this.data.checkout()\r\n      .subscribe(success => {\r\n        if (success) {\r\n          this.router.navigate([\"/\"]);\r\n        }\r\n      }, err => this.errorMessage = \"Failed to save order\");\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\"\n  ,\n  styles: []\n})\nexport class AppComponent {\n  title = 'Dutch Treat';\n}\n"," <h3>{{title}}</h3>\r\n<router-outlet></router-outlet>","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\nimport { Cart } from './shop/cart.component';\nimport { Shop } from './shop/shop.component';\nimport { Checkout } from './checkout/checkout.component';\nimport { Login } from './login/login.component';\n\nimport { DataService } from './shared/dataService';\n\nlet routes = [\n    { path: \"\", component: Shop },\n    { path: \"checkout\", component: Checkout },\n    {path:\"login\",component:Login}\n];\n\n@NgModule({\n  declarations: [\n        AppComponent,\n        ProductList,\n        Cart,\n        Shop,\n        Checkout,\n        Login\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      RouterModule.forRoot(routes, {\n          useHash: true,\r\n          enableTracing:false //for Debugging of the Routes\r\n      })\n  ],\n    providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n  orderId: number;\r\n  orderDate: Date = new Date();\r\n  orderNumber: string;\r\n  items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    }\r\n  \r\n}\r\n\r\nexport class OrderItem {\r\n  id: number;\r\n  quantity: number;\r\n  unitPrice: number;\r\n  productId: number;\r\n  productCategory: string;\r\n  productSize: string;\r\n  productTitle: string;\r\n  productArtist: string;\r\n  productArtId: string;\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'the-shop',\r\n    templateUrl: \"./shop.component.html\",\r\n    styleUrls: [\"./shop.component.css\"]\r\n})\r\n\r\nexport class Shop {\r\n\r\n\r\n    \r\n}","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n       \r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <div class=\"card bg-light p-2\">\r\n            <cart>Cart</cart>\r\n        </div>\r\n    </div>\r\n</div>","<div class=\"row\">\r\n  <div class=\"col-md-4 offset-md-4\">\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\r\n    <form (submit)=\"onLogin()\" #theForm=\"ngForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" #username=\"ngModel\" required />\r\n        <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\" >Username is required!</div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" required #password=\"ngModel\" />\r\n        <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Password is required!</div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"theForm.invalid\" />\r\n        <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\"\r\nimport { DataService } from '../shared/dataService';\r\n\r\n\r\n@Component({\r\n  selector: \"login\",\r\n    templateUrl: \"login.component.html\",\r\n    styleUrls: ['login.component.css']\r\n})\r\nexport class Login {\r\n\r\n    constructor(private data: DataService, private router: Router) {\r\n  }\r\n  \r\n    public creds = {\r\n        username: \"\",\r\n        password:\"\"\r\n    }\r\n    public errorMessage: string;\r\n    onLogin() {\r\n        //Call the login Service\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (this.data.order.items.length == 0) {\r\n                    this.router.navigate([\"\"]);\r\n                } else {\r\n                    this.router.navigate([\"checkout\"]);\r\n                }\r\n            }, err => this.errorMessage = \"Login failed\");\r\n    }\r\n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable, IterableDiffers } from \"@angular/core\";\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nimport { Product } from \"./product\";\r\nimport { Order, OrderItem } from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public products: Product[] = [];\r\n    public order: Order = new Order();\r\n    loadProducts(): Observable<boolean> {\r\n\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }\r\n                )\r\n            );\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n    public login(creds): Observable<boolean> {\r\n\r\n        return this.http.post(\"/account/createtoken\",creds)\r\n            .pipe(\r\n                map((response: any) => {\r\n                    //let tokenInfo = response.json();\r\n                    this.token = response.token;\r\n                    this.tokenExpiration = response.expiration;\r\n                    console.log(\"token : \" + this.token);\r\n                    console.log(\"token expiration : \" + this.tokenExpiration);\r\n                    return true;\r\n                }\r\n                )\r\n            );\r\n\r\n    }\r\n    public checkout(): Observable<true> {\r\n\r\n        if (!this.order.orderNumber) {\r\n\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n          \r\n        }\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders().set(\"Authorization\",\"Bearer \"+this.token)\r\n        })\r\n            .pipe(\r\n                map((response: any) => {\r\n                    this.order = new Order();\r\n                    return true;\r\n                }\r\n                )\r\n            );\r\n\r\n    }\r\n    public addToOrder(newProduct: Product) {\r\n        let item: OrderItem = this.order.items.find(i => i.productId == newProduct.id);\r\n        if (item != null) {\r\n            item.quantity++;\r\n        } else {\r\n            item = new OrderItem();\r\n            item.productId = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n            this.order.items.push(item);\r\n        }\r\n\r\n\r\n    }\r\n}","<h3>Shopping Cart</h3>\r\n<div>Count : {{data.order.items.length}}</div>\r\n<div>Subtotal : {{data.order.subtotal | currency:\"USD\":true}}</div>\r\n<table class=\"table table-condensed table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <td>Product</td>\r\n            <td>#</td>\r\n            <td>$</td>\r\n            <td>Total</td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let o  of data.order.items\">\r\n            <td>{{o.productCategory}} - {{o.productTitle}}</td>\r\n            <td>{{o.quantity}}</td>\r\n            <td>{{o.unitPrice | currency:\"USD\":true}}</td>\r\n            <td>{{(o.unitPrice*o.quantity) | currency:\"USD\":true}}</td>\r\n\r\n        </tr>\r\n    </tbody>\r\n\r\n</table>\r\n<button routerLink=\"checkout\" class=\"btn btn-success\" *ngIf=\"data.order.items.length > 0\" (click)=\"onCheckout()\">Checkout</button>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { DataService } from '../shared/dataService';\r\n\r\n\r\n@Component({\r\n    selector: 'cart',\r\n    templateUrl: \"./cart.component.html\",\r\n    styleUrls: [\"./cart.component.css\"]\r\n})\r\n\r\nexport class Cart {\r\n\r\n\r\n    constructor(public data: DataService,private router:Router) {\r\n\r\n    }\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            this.router.navigate([\"login\"])\r\n        }\r\n        else {\r\n            this.router.navigate([\"checkout\"])\r\n        }\r\n    }\r\n}\r\n\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}